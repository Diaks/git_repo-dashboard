<?php

namespace Proxies\__CG__\DBORM\OLDCSIBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Tblfptwaitinglist extends \DBORM\OLDCSIBundle\Entity\Tblfptwaitinglist implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'id', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'flight', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'version', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'status', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'evtdatetime', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'comment', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'rmuser', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'starttime', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'alreadytried', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'idType', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'parameter1', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'parameter2', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'conn');
        }

        return array('__isInitialized__', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'id', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'flight', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'version', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'status', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'evtdatetime', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'comment', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'rmuser', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'starttime', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'alreadytried', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'idType', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'parameter1', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'parameter2', '' . "\0" . 'DBORM\\OLDCSIBundle\\Entity\\Tblfptwaitinglist' . "\0" . 'conn');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Tblfptwaitinglist $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFlight($flight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFlight', array($flight));

        return parent::setFlight($flight);
    }

    /**
     * {@inheritDoc}
     */
    public function getFlight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFlight', array());

        return parent::getFlight();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion($version)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', array($version));

        return parent::setVersion($version);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', array());

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setEvtdatetime($evtdatetime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvtdatetime', array($evtdatetime));

        return parent::setEvtdatetime($evtdatetime);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvtdatetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvtdatetime', array());

        return parent::getEvtdatetime();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', array($comment));

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', array());

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setRmuser($rmuser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRmuser', array($rmuser));

        return parent::setRmuser($rmuser);
    }

    /**
     * {@inheritDoc}
     */
    public function getRmuser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRmuser', array());

        return parent::getRmuser();
    }

    /**
     * {@inheritDoc}
     */
    public function setStarttime($starttime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStarttime', array($starttime));

        return parent::setStarttime($starttime);
    }

    /**
     * {@inheritDoc}
     */
    public function getStarttime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStarttime', array());

        return parent::getStarttime();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlreadytried($alreadytried)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlreadytried', array($alreadytried));

        return parent::setAlreadytried($alreadytried);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlreadytried()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlreadytried', array());

        return parent::getAlreadytried();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdType($idType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdType', array($idType));

        return parent::setIdType($idType);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdType', array());

        return parent::getIdType();
    }

    /**
     * {@inheritDoc}
     */
    public function setParameter1($parameter1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParameter1', array($parameter1));

        return parent::setParameter1($parameter1);
    }

    /**
     * {@inheritDoc}
     */
    public function getParameter1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParameter1', array());

        return parent::getParameter1();
    }

    /**
     * {@inheritDoc}
     */
    public function setParameter2($parameter2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParameter2', array($parameter2));

        return parent::setParameter2($parameter2);
    }

    /**
     * {@inheritDoc}
     */
    public function getParameter2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParameter2', array());

        return parent::getParameter2();
    }

    /**
     * {@inheritDoc}
     */
    public function getNbStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbStatus', array($status));

        return parent::getNbStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function status_purge_status($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'status_purge_status', array($status));

        return parent::status_purge_status($status);
    }

}
